/*
 * This file is generated by jOOQ.
 */
package org.example.businesspack.bd.tables.records;


import java.time.LocalDate;

import org.example.businesspack.bd.tables.JournalWork;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JournalWorkRecord extends UpdatableRecordImpl<JournalWorkRecord> implements Record5<Integer, String, LocalDate, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>journal_work.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>journal_work.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>journal_work.client</code>.
     */
    public void setClient(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>journal_work.client</code>.
     */
    public String getClient() {
        return (String) get(1);
    }

    /**
     * Setter for <code>journal_work.work_date</code>.
     */
    public void setWorkDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>journal_work.work_date</code>.
     */
    public LocalDate getWorkDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>journal_work.maintenance_id</code>.
     */
    public void setMaintenanceId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>journal_work.maintenance_id</code>.
     */
    public Integer getMaintenanceId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>journal_work.person</code>.
     */
    public void setPerson(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>journal_work.person</code>.
     */
    public Integer getPerson() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, LocalDate, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, LocalDate, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JournalWork.JOURNAL_WORK.ID;
    }

    @Override
    public Field<String> field2() {
        return JournalWork.JOURNAL_WORK.CLIENT;
    }

    @Override
    public Field<LocalDate> field3() {
        return JournalWork.JOURNAL_WORK.WORK_DATE;
    }

    @Override
    public Field<Integer> field4() {
        return JournalWork.JOURNAL_WORK.MAINTENANCE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return JournalWork.JOURNAL_WORK.PERSON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getClient();
    }

    @Override
    public LocalDate component3() {
        return getWorkDate();
    }

    @Override
    public Integer component4() {
        return getMaintenanceId();
    }

    @Override
    public Integer component5() {
        return getPerson();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getClient();
    }

    @Override
    public LocalDate value3() {
        return getWorkDate();
    }

    @Override
    public Integer value4() {
        return getMaintenanceId();
    }

    @Override
    public Integer value5() {
        return getPerson();
    }

    @Override
    public JournalWorkRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public JournalWorkRecord value2(String value) {
        setClient(value);
        return this;
    }

    @Override
    public JournalWorkRecord value3(LocalDate value) {
        setWorkDate(value);
        return this;
    }

    @Override
    public JournalWorkRecord value4(Integer value) {
        setMaintenanceId(value);
        return this;
    }

    @Override
    public JournalWorkRecord value5(Integer value) {
        setPerson(value);
        return this;
    }

    @Override
    public JournalWorkRecord values(Integer value1, String value2, LocalDate value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JournalWorkRecord
     */
    public JournalWorkRecord() {
        super(JournalWork.JOURNAL_WORK);
    }

    /**
     * Create a detached, initialised JournalWorkRecord
     */
    public JournalWorkRecord(Integer id, String client, LocalDate workDate, Integer maintenanceId, Integer person) {
        super(JournalWork.JOURNAL_WORK);

        setId(id);
        setClient(client);
        setWorkDate(workDate);
        setMaintenanceId(maintenanceId);
        setPerson(person);
        resetChangedOnNotNull();
    }
}
