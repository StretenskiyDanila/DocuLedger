/*
 * This file is generated by jOOQ.
 */
package org.example.businesspack.bd.tables.records;


import java.math.BigDecimal;

import org.example.businesspack.bd.tables.DataWork;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataWorkRecord extends UpdatableRecordImpl<DataWorkRecord> implements Record9<Integer, String, String, Integer, BigDecimal, BigDecimal, BigDecimal, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>data_work.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>data_work.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>data_work.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>data_work.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>data_work.unit_meas</code>.
     */
    public void setUnitMeas(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>data_work.unit_meas</code>.
     */
    public String getUnitMeas() {
        return (String) get(2);
    }

    /**
     * Setter for <code>data_work.count</code>.
     */
    public void setCount(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>data_work.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>data_work.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>data_work.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>data_work.vat</code>.
     */
    public void setVat(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>data_work.vat</code>.
     */
    public BigDecimal getVat() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>data_work.summa</code>.
     */
    public void setSumma(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>data_work.summa</code>.
     */
    public BigDecimal getSumma() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>data_work.group</code>.
     */
    public void setGroup(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>data_work.group</code>.
     */
    public String getGroup() {
        return (String) get(7);
    }

    /**
     * Setter for <code>data_work.tab</code>.
     */
    public void setTab(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>data_work.tab</code>.
     */
    public String getTab() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, Integer, BigDecimal, BigDecimal, BigDecimal, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, Integer, BigDecimal, BigDecimal, BigDecimal, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DataWork.DATA_WORK.ID;
    }

    @Override
    public Field<String> field2() {
        return DataWork.DATA_WORK.NAME;
    }

    @Override
    public Field<String> field3() {
        return DataWork.DATA_WORK.UNIT_MEAS;
    }

    @Override
    public Field<Integer> field4() {
        return DataWork.DATA_WORK.COUNT;
    }

    @Override
    public Field<BigDecimal> field5() {
        return DataWork.DATA_WORK.PRICE;
    }

    @Override
    public Field<BigDecimal> field6() {
        return DataWork.DATA_WORK.VAT;
    }

    @Override
    public Field<BigDecimal> field7() {
        return DataWork.DATA_WORK.SUMMA;
    }

    @Override
    public Field<String> field8() {
        return DataWork.DATA_WORK.GROUP;
    }

    @Override
    public Field<String> field9() {
        return DataWork.DATA_WORK.TAB;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getUnitMeas();
    }

    @Override
    public Integer component4() {
        return getCount();
    }

    @Override
    public BigDecimal component5() {
        return getPrice();
    }

    @Override
    public BigDecimal component6() {
        return getVat();
    }

    @Override
    public BigDecimal component7() {
        return getSumma();
    }

    @Override
    public String component8() {
        return getGroup();
    }

    @Override
    public String component9() {
        return getTab();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getUnitMeas();
    }

    @Override
    public Integer value4() {
        return getCount();
    }

    @Override
    public BigDecimal value5() {
        return getPrice();
    }

    @Override
    public BigDecimal value6() {
        return getVat();
    }

    @Override
    public BigDecimal value7() {
        return getSumma();
    }

    @Override
    public String value8() {
        return getGroup();
    }

    @Override
    public String value9() {
        return getTab();
    }

    @Override
    public DataWorkRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DataWorkRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public DataWorkRecord value3(String value) {
        setUnitMeas(value);
        return this;
    }

    @Override
    public DataWorkRecord value4(Integer value) {
        setCount(value);
        return this;
    }

    @Override
    public DataWorkRecord value5(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public DataWorkRecord value6(BigDecimal value) {
        setVat(value);
        return this;
    }

    @Override
    public DataWorkRecord value7(BigDecimal value) {
        setSumma(value);
        return this;
    }

    @Override
    public DataWorkRecord value8(String value) {
        setGroup(value);
        return this;
    }

    @Override
    public DataWorkRecord value9(String value) {
        setTab(value);
        return this;
    }

    @Override
    public DataWorkRecord values(Integer value1, String value2, String value3, Integer value4, BigDecimal value5, BigDecimal value6, BigDecimal value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DataWorkRecord
     */
    public DataWorkRecord() {
        super(DataWork.DATA_WORK);
    }

    /**
     * Create a detached, initialised DataWorkRecord
     */
    public DataWorkRecord(Integer id, String name, String unitMeas, Integer count, BigDecimal price, BigDecimal vat, BigDecimal summa, String group, String tab) {
        super(DataWork.DATA_WORK);

        setId(id);
        setName(name);
        setUnitMeas(unitMeas);
        setCount(count);
        setPrice(price);
        setVat(vat);
        setSumma(summa);
        setGroup(group);
        setTab(tab);
        resetChangedOnNotNull();
    }
}
