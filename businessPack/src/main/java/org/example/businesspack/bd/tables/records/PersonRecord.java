/*
 * This file is generated by jOOQ.
 */
package org.example.businesspack.bd.tables.records;


import java.time.LocalDate;

import org.example.businesspack.bd.tables.Person;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record6<Integer, String, String, LocalDate, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>person.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>person.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>person.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>person.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>person.role</code>.
     */
    public void setRole(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>person.role</code>.
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>person.last_used</code>.
     */
    public void setLastUsed(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>person.last_used</code>.
     */
    public LocalDate getLastUsed() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>person.usage_count</code>.
     */
    public void setUsageCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>person.usage_count</code>.
     */
    public Integer getUsageCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>person.tab</code>.
     */
    public void setTab(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>person.tab</code>.
     */
    public String getTab() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, LocalDate, Integer, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, LocalDate, Integer, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Person.PERSON.ID;
    }

    @Override
    public Field<String> field2() {
        return Person.PERSON.NAME;
    }

    @Override
    public Field<String> field3() {
        return Person.PERSON.ROLE;
    }

    @Override
    public Field<LocalDate> field4() {
        return Person.PERSON.LAST_USED;
    }

    @Override
    public Field<Integer> field5() {
        return Person.PERSON.USAGE_COUNT;
    }

    @Override
    public Field<String> field6() {
        return Person.PERSON.TAB;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getRole();
    }

    @Override
    public LocalDate component4() {
        return getLastUsed();
    }

    @Override
    public Integer component5() {
        return getUsageCount();
    }

    @Override
    public String component6() {
        return getTab();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getRole();
    }

    @Override
    public LocalDate value4() {
        return getLastUsed();
    }

    @Override
    public Integer value5() {
        return getUsageCount();
    }

    @Override
    public String value6() {
        return getTab();
    }

    @Override
    public PersonRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PersonRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PersonRecord value3(String value) {
        setRole(value);
        return this;
    }

    @Override
    public PersonRecord value4(LocalDate value) {
        setLastUsed(value);
        return this;
    }

    @Override
    public PersonRecord value5(Integer value) {
        setUsageCount(value);
        return this;
    }

    @Override
    public PersonRecord value6(String value) {
        setTab(value);
        return this;
    }

    @Override
    public PersonRecord values(Integer value1, String value2, String value3, LocalDate value4, Integer value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonRecord
     */
    public PersonRecord() {
        super(Person.PERSON);
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(Integer id, String name, String role, LocalDate lastUsed, Integer usageCount, String tab) {
        super(Person.PERSON);

        setId(id);
        setName(name);
        setRole(role);
        setLastUsed(lastUsed);
        setUsageCount(usageCount);
        setTab(tab);
        resetChangedOnNotNull();
    }
}
